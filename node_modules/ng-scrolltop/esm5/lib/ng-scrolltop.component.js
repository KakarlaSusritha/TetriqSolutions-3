/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { NgScrolltopService } from './ng-scrolltop.service';
/** @type {?} */
var setElementStyle = (/**
 * @param {?} elem
 * @param {?} name
 * @param {?} value
 * @return {?}
 */
function (elem, name, value) {
    if (elem && name) {
        elem.style[name] = value || '';
    }
});
var ɵ0 = setElementStyle;
var NgScrolltopComponent = /** @class */ (function () {
    function NgScrolltopComponent(service) {
        this.service = service;
        this._size = '48px';
        this.sizeInner = '24';
    }
    Object.defineProperty(NgScrolltopComponent.prototype, "bottom", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._bottom = value;
            setElementStyle(this.icon, 'bottom', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgScrolltopComponent.prototype, "background", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._background = value;
            setElementStyle(this.icon, 'background', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgScrolltopComponent.prototype, "elementId", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._elementId = value;
            this.service.init(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgScrolltopComponent.prototype, "size", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._size = value;
            setElementStyle(this.icon, 'width', value);
            setElementStyle(this.icon, 'height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgScrolltopComponent.prototype, "fill", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._fill = value;
            setElementStyle(this.svg, 'fill', value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NgScrolltopComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.service.init(this._elementId);
        this.icon = (/** @type {?} */ (document.querySelector('div.scroll-top:not(.dev)')));
        this.svg = (/** @type {?} */ (document.querySelector('div.scroll-top:not(.dev) svg')));
        if (this.icon) {
            setElementStyle(this.icon, 'bottom', this._bottom);
            setElementStyle(this.icon, 'background', this._background);
            setElementStyle(this.icon, 'width', this._size);
            setElementStyle(this.icon, 'height', this._size);
            setElementStyle(this.svg, 'fill', this._fill);
        }
        else {
            this.service.log("NgScrolltopComponent failed to find icon element, so any inputs will be ignored");
        }
        this.service.log("NgScrolltopComponent(" + this.service.isWindow + ", " + this._bottom + ", " + this._background + ", " + this._elementId + ")", this.icon && this.icon.style);
    };
    /**
     * @return {?}
     */
    NgScrolltopComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.service.destroy();
    };
    NgScrolltopComponent.decorators = [
        { type: Component, args: [{
                    selector: 'scrolltop',
                    template: "\n<div class=\"scroll-top\" blScrolltop\n  [ngClass]=\"{'show-icon': service.showIcon}\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" [attr.width]=\"sizeInner\" [attr.height]=\"sizeInner\" viewBox=\"0 0 24 24\"><path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n</div>\n\n<div class=\"scroll-top dev\" *ngIf=\"service.isDevMode\">\n  {{service.info}}\n</div>\n  ",
                    styles: ["\n  .scroll-top {\n    position: fixed;\n    bottom: 12px;\n    left: 12px;\n    height: 48px;\n    width: 48px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    background: #333;\n    transform: rotate(-90deg);\n    opacity: 0;\n    visibility: hidden;\n    transition: visibility 1.0s linear, opacity 1.0s linear;\n  }\n  .scroll-top:hover {\n    cursor: pointer;\n  }\n  .scroll-top.show-icon {\n    visibility: visible;\n    opacity: 0.3;\n  }\n  .scroll-top.dev {\n    bottom: 150px;\n    visibility: visible;\n    opacity: 0.5;\n    transform: none;\n    color: #fff;\n  }\n    "]
                }] }
    ];
    /** @nocollapse */
    NgScrolltopComponent.ctorParameters = function () { return [
        { type: NgScrolltopService }
    ]; };
    NgScrolltopComponent.propDecorators = {
        bottom: [{ type: Input }],
        background: [{ type: Input }],
        elementId: [{ type: Input }],
        size: [{ type: Input }],
        sizeInner: [{ type: Input }],
        fill: [{ type: Input }]
    };
    return NgScrolltopComponent;
}());
export { NgScrolltopComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgScrolltopComponent.prototype.icon;
    /**
     * @type {?}
     * @private
     */
    NgScrolltopComponent.prototype.svg;
    /**
     * @type {?}
     * @private
     */
    NgScrolltopComponent.prototype._bottom;
    /**
     * @type {?}
     * @private
     */
    NgScrolltopComponent.prototype._background;
    /**
     * @type {?}
     * @private
     */
    NgScrolltopComponent.prototype._elementId;
    /**
     * @type {?}
     * @private
     */
    NgScrolltopComponent.prototype._fill;
    /**
     * @type {?}
     * @private
     */
    NgScrolltopComponent.prototype._size;
    /** @type {?} */
    NgScrolltopComponent.prototype.sizeInner;
    /** @type {?} */
    NgScrolltopComponent.prototype.service;
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,