{"version":3,"sources":["ng://ng-scrolltop/lib/ng-scrolltop.service.ts","ng://ng-scrolltop/lib/ng-scrolltop.component.ts","ng://ng-scrolltop/lib/ng-scrolltop.directive.ts","ng://ng-scrolltop/lib/ng-scrolltop.module.ts"],"names":["NgScrolltopService","_this","this","isDevMode","isWindow","window","_init","lastY","ticking","log","s","optional","_i","arguments","length","console","handleScroll","e","requestAnimationFrame","updateLastY","Object","defineProperty","prototype","_elementToScroll","scrollTop","pageYOffset","Math","ceil","setDevMode","init","elementId","destroy","document","querySelector","_host","addEventListener","removeEventListener","scrollABit","newY","scroll","currentPositionY","Injectable","args","providedIn","setElementStyle","elem","name","value","style","NgScrolltopComponent","service","_size","sizeInner","_bottom","icon","_background","_elementId","_fill","svg","ngOnInit","ngOnDestroy","Component","selector","template","Input","NgScrolltopDirective","ngZone","startTime","startTop","progress","easing","x","pow","bind","onclick","runOutsideAngular","timestamp","percent","Directive","NgZone","HostListener","NgScrolltopModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable, isDevMode } from '@angular/core';\r\n\r\nconst DEFAULT_SCROLLED_PX = 500;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgScrolltopService {\r\n  isDevMode = isDevMode();\r\n  isWindow = typeof window !== 'undefined';\r\n  _init = false;\r\n  private _elementToScroll: HTMLElement;\r\n  private _host: any; // scrolling window by default or element if [elementId] is given\r\n  private lastY = 0;\r\n  private ticking = false;\r\n\r\n  get currentPositionY(): number {\r\n    return this._elementToScroll ? this._elementToScroll.scrollTop : window.pageYOffset;\r\n  }\r\n  get info(): number { return Math.ceil(this.lastY); }\r\n  get showIcon(): boolean { return this.isWindow && this.lastY > DEFAULT_SCROLLED_PX; }\r\n\r\n  setDevMode() { this.isDevMode = true; }\r\n  log = (s?: any, ...optional: any[]) => s && this.isDevMode && console.log(s, optional);\r\n\r\n  constructor() { }\r\n\r\n  init(elementId: string) {\r\n    if (this.isWindow) {\r\n      this.destroy();\r\n\r\n      this._elementToScroll = null;\r\n      if (elementId) {\r\n        this._elementToScroll = document.querySelector(`#${elementId}`) as HTMLElement;\r\n      }\r\n\r\n      this._host = this._elementToScroll || window;\r\n      this._host.addEventListener('scroll', this.handleScroll);\r\n\r\n      this.log(`'NgScrolltopService' to use ${this._elementToScroll ? 'element' : 'window'}`, elementId || '');\r\n    }\r\n\r\n    this._init = true;\r\n  }\r\n\r\n  destroy() {\r\n    this.isWindow && this._host && this._host.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  scrollABit(newY) {\r\n    if (this._elementToScroll) {\r\n      this._elementToScroll.scrollTop = newY;\r\n    } else {\r\n      window.scroll(0, newY);\r\n    }\r\n  }\r\n\r\n  private handleScroll = (e) => {\r\n    if (!this.ticking) {\r\n      window.requestAnimationFrame(() => {\r\n        this.updateLastY()\r\n        this.ticking = false\r\n      })\r\n      this.ticking = true\r\n    }\r\n  }\r\n\r\n  private updateLastY() {\r\n    if (!this._init) return;\r\n\r\n    const newY = this.currentPositionY\r\n    if (newY !== this.lastY) {\r\n      this.lastY = newY;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgScrolltopService } from './ng-scrolltop.service';\r\n\r\nconst setElementStyle = (elem: HTMLElement, name: string, value: string) => {\r\n  if (elem && name) {\r\n    elem.style[name] = value || '';\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'scrolltop',\r\n  template: `\r\n<div class=\"scroll-top\" blScrolltop\r\n  [ngClass]=\"{'show-icon': service.showIcon}\">\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" [attr.width]=\"sizeInner\" [attr.height]=\"sizeInner\" viewBox=\"0 0 24 24\"><path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n</div>\r\n\r\n<div class=\"scroll-top dev\" *ngIf=\"service.isDevMode\">\r\n  {{service.info}}\r\n</div>\r\n  `,\r\n  styles: [`\r\n  .scroll-top {\r\n    position: fixed;\r\n    bottom: 12px;\r\n    left: 12px;\r\n    height: 48px;\r\n    width: 48px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    background: #333;\r\n    transform: rotate(-90deg);\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: visibility 1.0s linear, opacity 1.0s linear;\r\n  }\r\n  .scroll-top:hover {\r\n    cursor: pointer;\r\n  }\r\n  .scroll-top.show-icon {\r\n    visibility: visible;\r\n    opacity: 0.3;\r\n  }\r\n  .scroll-top.dev {\r\n    bottom: 150px;\r\n    visibility: visible;\r\n    opacity: 0.5;\r\n    transform: none;\r\n    color: #fff;\r\n  }\r\n    `],\r\n})\r\nexport class NgScrolltopComponent implements OnInit, OnDestroy {\r\n  private icon: HTMLElement;\r\n  private svg: HTMLElement;\r\n  private _bottom: string;\r\n  private _background: string;\r\n  private _elementId: string;\r\n  private _fill: string;\r\n  private _size: string = '48px';\r\n\r\n  @Input()\r\n  set bottom(value: string) {\r\n    this._bottom = value;\r\n    setElementStyle(this.icon, 'bottom', value);\r\n  }\r\n  @Input()\r\n  set background(value: string) {\r\n    this._background = value;\r\n    setElementStyle(this.icon, 'background', value);\r\n  }\r\n  @Input()\r\n  set elementId(value: string) {\r\n    this._elementId = value;\r\n    this.service.init(value);\r\n  }\r\n  @Input() \r\n  set size(value: string) {\r\n    this._size = value;\r\n    setElementStyle(this.icon, 'width', value);\r\n    setElementStyle(this.icon, 'height', value);\r\n  }\r\n  @Input() sizeInner: string = '24';\r\n  @Input() \r\n  set fill(value: string) {\r\n    this._fill = value;\r\n    setElementStyle(this.svg, 'fill', value);\r\n  }\r\n\r\n  constructor(public service: NgScrolltopService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.service.init(this._elementId);\r\n\r\n    this.icon = document.querySelector('div.scroll-top:not(.dev)') as HTMLElement;\r\n    this.svg = document.querySelector('div.scroll-top:not(.dev) svg') as HTMLElement;\r\n    if (this.icon) {\r\n      setElementStyle(this.icon, 'bottom', this._bottom);\r\n      setElementStyle(this.icon, 'background', this._background);\r\n      setElementStyle(this.icon, 'width', this._size);\r\n      setElementStyle(this.icon, 'height', this._size);\r\n      setElementStyle(this.svg, 'fill', this._fill);\r\n    } else {\r\n      this.service.log(`NgScrolltopComponent failed to find icon element, so any inputs will be ignored`);\r\n    }\r\n\r\n    this.service.log(`NgScrolltopComponent(${this.service.isWindow}, ${this._bottom}, ${this._background}, ${this._elementId})`, this.icon && this.icon.style);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.service.destroy();\r\n  }\r\n}\r\n","import { Directive, HostListener, NgZone } from '@angular/core';\r\nimport { NgScrolltopService } from './ng-scrolltop.service';\r\n\r\nconst DURATION = 1000;\r\n\r\n@Directive({\r\n  selector: '[blScrolltop]'\r\n})\r\nexport class NgScrolltopDirective {\r\n  startTime: number = null;\r\n  startTop: number = null;\r\n  progress: number = 0;\r\n\r\n  constructor(public service: NgScrolltopService,\r\n    private ngZone: NgZone) {\r\n    this.scrollABit = this.scrollABit.bind(this);\r\n  }\r\n\r\n  @HostListener('click')\r\n  onclick() {\r\n    this.startTop = this.service.currentPositionY;\r\n    this.startTime = null;\r\n    this.ngZone.runOutsideAngular(() => { window.requestAnimationFrame(this.scrollABit); });\r\n\r\n    this.service.log('NgScrolltopDirective click');\r\n  }\r\n\r\n  easing = (x) => {\r\n    'use strict';\r\n\r\n    if (x < 0.5) {\r\n      return Math.pow(x * 2, 2) / 2;\r\n    }\r\n    return 1 - Math.pow((1 - x) * 2, 2) / 2;\r\n  }\r\n\r\n  scrollABit(timestamp) {\r\n    if (!this.startTime) {\r\n      this.startTime = timestamp;\r\n    }\r\n\r\n    this.progress = timestamp - this.startTime;\r\n    const percent = (this.progress >= DURATION ? 1 : this.easing(this.progress / DURATION));\r\n    const newY = this.startTop - Math.ceil(this.startTop * percent);\r\n\r\n    this.service.scrollABit(newY);\r\n\r\n    if (percent < 1) {\r\n      this.ngZone.runOutsideAngular(() => { window.requestAnimationFrame(this.scrollABit); });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgScrolltopComponent } from './ng-scrolltop.component';\r\nimport { NgScrolltopDirective } from './ng-scrolltop.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    NgScrolltopComponent,\r\n    NgScrolltopDirective,\r\n  ],\r\n  exports: [\r\n    NgScrolltopComponent,\r\n    NgScrolltopDirective,\r\n  ]\r\n})\r\nexport class NgScrolltopModule { }\r\n"]}